namespace qi = boost::spirit::qi;

typedef vector<vector<double>> TSPList;
 
template <typename Iterator>
struct keys_and_values
	: qi::grammar<Iterator, TSPList()>
{
	keys_and_values()
		: keys_and_values::base_type(query)
	{
		query =  (jibberish %'\n') >> nodecoorddata >> "EOF";
		jibberish = +qi::char_("a-zA-Z_0-9:");
		nodecoorddata = "NODE_COORD_SECTION" >> (nodecoordentry % '\n');
		nodecoordentry = int_ >> nodecoord;
		nodecoordpair = nodecoord >> nodecoord;
		nodecoord = double_;
	}
	qi::rule<Iterator, TSPList>>
	qi::rule<Iterator, vector<double>(), space_type> nodecoordpair;
	qi::rule<Iterator, double> nodecoord;
};
